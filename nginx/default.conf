server {
  listen [::]:80;
  listen 80;

  server_name www.panzerdragoonlegacy.com panzerdragoonlegacy.com;

  location ~ /.well-known/acme-challenge {
    allow all;
    root /var/www/certbot;
  }

  location / {
    rewrite ^ https://$host$request_uri? permanent;
  }
}

server {
  listen [::]:443 ssl http2;
  listen 443 ssl http2;
  server_name panzerdragoonlegacy.com;

  server_tokens off;

  ssl_certificate /etc/nginx/ssl/live/panzerdragoonlegacy.com/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/live/panzerdragoonlegacy.com/privkey.pem;

  location / {
    try_files $uri @app;
  }

  # Serve static (compiled) assets directly if they exist (for rails production)
  location ~ ^/(assets|packs|images|javascripts|stylesheets|system)/ {
    gzip_static on;
    expires 1y;
    add_header Cache-Control public;
    add_header ETag "";
  }

  location @app {
    proxy_pass http://app:3000;
    proxy_set_header HOST $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
  }

  root /cms/public;
  index index.html index.htm index.nginx-debian.html;

  client_max_body_size 250M;
}

server {
  listen 80;
  listen 443 ssl;
  server_name www.panzerdragoonlegacy.com;
  return 301 $scheme://panzerdragoonlegacy.com$request_uri;
}
